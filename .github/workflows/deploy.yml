name: Test and Deploy

# Триггеры запуска workflow
on:
  # При пуше в ветку main
  push:
    branches: [ "main" ]
  # При создании pull request в ветку main
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Задача линтера
  eslint:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # Шаг 1: Получение кода из репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # Шаг 2: Настройка Node.js среды
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'  # Конкретная версия Node.js для стабильности
          cache: 'npm'  # Кэширование npm зависимостей для ускорения

      # Шаг 3: Установка зависимостей
      - name: Install dependencies
        run: npm ci  # Используем ci для чистых установок в CI/CD

      # Шаг 4: Запуск eslint
      - name: Run eslint
        run: npm run lint


  # Задача тестирования
  test:
    name: Run Test Suite
    runs-on: ubuntu-latest  # Запуск на последней версии Ubuntu
    permissions:
      contents: read
    
    steps:
    # Шаг 1: Получение кода из репозитория
    - name: Checkout code
      uses: actions/checkout@v4

    # Шаг 2: Настройка Node.js среды
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.17.0'  # Конкретная версия Node.js для стабильности
        cache: 'npm'  # Кэширование npm зависимостей для ускорения

    # Шаг 3: Установка зависимостей
    - name: Install dependencies
      run: npm ci  # Используем ci для чистых установок в CI/CD

    # Шаг 4: Запуск unit-тестов
    - name: Run unit tests
      run: npm test

    # Шаг 5: Запуск тестов с покрытием кода
    - name: Run tests with coverage
      run: npm run test:coverage

    # Шаг 6: Сохранение отчета о покрытии как артефакта
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report  # Имя артефакта
        path: coverage/  # Папка с отчетом о покрытии
        retention-days: 7  # Хранение артефакта 7 дней

  # Задача сборки и деплоя (запускается только после успешного тестирования)
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [eslint, test]  # Зависимость: выполняется только если задача test и eslint успешна
    # Условие: запускать только при пуше в main ветку (не при PR)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    # Шаг 1: Получение кода (повторно для чистого состояния)
    - name: Checkout code
      uses: actions/checkout@v4

    # Шаг 2: Настройка Node.js (аналогично задаче test)
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.17.0'
        cache: 'npm'

    # Шаг 3: Установка зависимостей
    - name: Install dependencies
      run: npm ci

    # Шаг 4: Сборка проекта для production
    - name: Build project
      run: npm run build:prod

    - name: Setup Pages
      uses: actions/configure-pages@v4      

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build

    # Шаг 5: Деплой на GitHub Pages
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4